{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e71d4b77d429b00e0b5b","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js"],"names":["_errorTimeout","_errorConnectionClosed","Centrifuge","url","options","_url","_websocket","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_lastSeq","_lastGen","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_config","debug","websocket","sockjs","promise","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","_configure","token","data","params","headers","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","configuration","Object","assign","indexOf","_setFormat","SockJS","newStatus","interval","xhrID","abort","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","Date","_call","then","_connectResponse","decodeCommandResult","CONNECT","resolveCtx","result","next","err","rejectCtx","code","_disconnect","onerror","onclose","reason","needReconnect","closeEvent","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","method","RPC","isConnected","Promise","reject","SEND","sent","_transportSend","resolve","PUBLISH","replies","decodeReplies","p","_dispatchReply","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","Math","round","random","max","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","_getTTLMilliseconds","ttl","undefined","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","seq","_getLastSeq","gen","_getLastGen","epoch","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","min","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_isSubscribing","message","_setSubscribeError","recovered","_setSubscribeSuccess","pubs","publications","reverse","_handlePublication","recoverable","_recoverable","reply","join","info","leave","unsub","unsubscribe","resubscribe","subscribe","pub","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","_handleReply","_handlePush","messages","slice","PING","_pingResponse","lastSeq","lastGen","lastEpoch","errObject","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","events","currentSub","_setEvents","_isUnsubscribed","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","Subscription","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","on","errContext","_resolve","value","_reject","prototype","toString","call","knownEvents","l","ev","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","methodCallPromise","subPromise","_isError","res","rej","_nextPromiseId","_methodCall","PRESENCE","PRESENCE_STATS","HISTORY","JsonMethodType","JsonPushType","JsonEncoder","encodedCommands","JsonDecoder","encodedReplies","split","methodType","pushType","startsWith","isFunction","log","backoff","errorExists","prefix","lastIndexOf","level","args","console","logger","apply","step","pow","floor"],"mappings":"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AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;QC7SgB+R,U,GAAAA,U;QAIAC,U,GAAAA,U;QAOAC,G,GAAAA,G;QAUAC,O,GAAAA,O;QAOAC,W,GAAAA,W;AA5BT,SAASJ,UAAT,CAAoBlC,KAApB,EAA2BuC,MAA3B,EAAmC;AACxC,SAAOvC,MAAMwC,WAAN,CAAkBD,MAAlB,EAA0B,CAA1B,MAAiC,CAAxC;AACD;;AAEM,SAASJ,UAAT,CAAoBnC,KAApB,EAA2B;AAChC,MAAIA,UAAU5G,SAAV,IAAuB4G,UAAU,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD;AACD,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;;AAEM,SAASoC,GAAT,CAAaK,KAAb,EAAoBC,IAApB,EAA0B;AAC/B,MAAI9R,OAAO+R,OAAX,EAAoB;AAClB,QAAMC,SAAShS,OAAO+R,OAAP,CAAeF,KAAf,CAAf;;AAEA,QAAIN,WAAWS,MAAX,CAAJ,EAAwB;AACtBA,aAAOC,KAAP,CAAajS,OAAO+R,OAApB,EAA6BD,IAA7B;AACD;AACF;AACF;;AAEM,SAASL,OAAT,CAAiBS,IAAjB,EAAuB/H,GAAvB,EAA4BrC,GAA5B,EAAiC;AACtC,MAAMJ,SAAS,MAAMC,KAAKE,MAAL,EAArB;AACA,MAAM3F,WAAWyF,KAAKwC,GAAL,CAASrC,GAAT,EAAcqC,MAAMxC,KAAKwK,GAAL,CAAS,CAAT,EAAYD,OAAO,CAAnB,CAApB,CAAjB;;AAEA,SAAOvK,KAAKyK,KAAL,CAAW,CAAC,IAAI1K,MAAL,IAAexF,QAA1B,CAAP;AACD;;AAEM,SAASwP,WAAT,CAAqBnS,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,KAAK2B,KAAL,KAAe,IAAzC;AACD,E","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e71d4b77d429b00e0b5b","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    const msg = {\n      method: this._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(resolveCtx => {\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n      return this._decoder.decodeCommandResult(this._methodType.RPC, resolveCtx.result);\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      return rejectCtx.error;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(result => {\n      if (result.next) {\n        result.next();\n      }\n      return {};\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    this._restartPing();\n  }\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        if (seq) {\n          msg.params.seq = seq;\n        }\n        const gen = this._getLastGen(channel);\n        if (gen) {\n          msg.params.gen = gen;\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _connectResponse(result) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n\n    let pubs = result.publications;\n\n    if (pubs && pubs.length > 0) {\n      // handle missed pubs.\n      pubs = pubs.reverse();\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    } else {\n      if (result.recoverable) {\n        this._lastSeq[channel] = result.seq || 0;\n        this._lastGen[channel] = result.gen || 0;\n      }\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', {'info': join.info});\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', {'info': leave.info});\n  };\n\n  _handleUnsub(channel, unsub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    sub.emit('publish', pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    }\n    next();\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              if (seq) {\n                msg.params.seq = seq;\n              }\n              const gen = this._getLastGen(channel);\n              if (gen) {\n                msg.params.gen = gen;\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(recovered) {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[this._nextPromiseId()] = {\n            timeout: timeout,\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            resolveCtx => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            },\n            rejectCtx => {\n              reject(rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}