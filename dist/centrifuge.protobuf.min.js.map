{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///centrifuge.protobuf.min.js","webpack:///webpack/bootstrap 858363e1fedb4bd6127e","webpack:///./node_modules/protobufjs/src/util.js","webpack:///./node_modules/protobufjs/src/util/minimal.js","webpack:///./node_modules/protobufjs/src/enum.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/protobufjs/src/object.js","webpack:///./node_modules/protobufjs/src/field.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js","webpack:///./node_modules/protobufjs/src/namespace.js","webpack:///./node_modules/protobufjs/src/types.js","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///./node_modules/protobufjs/src/writer.js","webpack:///./node_modules/protobufjs/src/reader.js","webpack:///./node_modules/protobufjs/src/oneof.js","webpack:///./node_modules/protobufjs/src/message.js","webpack:///./node_modules/@protobufjs/aspromise/index.js","webpack:///./node_modules/@protobufjs/inquire/index.js","webpack:///./node_modules/protobufjs/src/rpc.js","webpack:///./node_modules/protobufjs/src/roots.js","webpack:///./node_modules/protobufjs/src/encoder.js","webpack:///./node_modules/protobufjs/src/type.js","webpack:///./node_modules/protobufjs/src/mapfield.js","webpack:///./node_modules/protobufjs/src/service.js","webpack:///./node_modules/protobufjs/src/method.js","webpack:///./node_modules/protobufjs/src/decoder.js","webpack:///./node_modules/protobufjs/src/verifier.js","webpack:///./node_modules/protobufjs/src/converter.js","webpack:///./node_modules/protobufjs/src/wrappers.js","webpack:///./node_modules/protobufjs/src/root.js","webpack:///./src/index_protobuf.js","webpack:///./src/protobuf.js","webpack:///./node_modules/protobufjs/light.js","webpack:///./node_modules/protobufjs/src/index-light.js","webpack:///./node_modules/protobufjs/src/index-minimal.js","webpack:///./node_modules/@protobufjs/base64/index.js","webpack:///./node_modules/@protobufjs/eventemitter/index.js","webpack:///./node_modules/@protobufjs/float/index.js","webpack:///./node_modules/@protobufjs/utf8/index.js","webpack:///./node_modules/@protobufjs/pool/index.js","webpack:///./node_modules/protobufjs/src/util/longbits.js","webpack:///./node_modules/protobufjs/src/writer_buffer.js","webpack:///./node_modules/protobufjs/src/reader_buffer.js","webpack:///./node_modules/protobufjs/src/rpc/service.js","webpack:///./node_modules/@protobufjs/codegen/index.js","webpack:///./node_modules/@protobufjs/fetch/index.js","webpack:///./node_modules/@protobufjs/path/index.js","webpack:///./src/client.proto.json"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Type","Enum","util","roots","codegen","fetch","path","fs","inquire","toArray","keys","array","Array","length","index","toObject","key","val","undefined","safePropBackslashRe","safePropQuoteRe","isReserved","test","safeProp","prop","replace","ucFirst","str","charAt","toUpperCase","substring","camelCaseRe","camelCase","$0","$1","compareFieldsById","a","b","id","decorateType","ctor","typeName","$type","decorateRoot","remove","add","type","value","decorateEnumIndex","decorateEnum","enm","global","merge","dst","src","ifNotSet","newError","CustomError","message","properties","Error","captureStackTrace","stack","create","constructor","toString","asPromise","base64","EventEmitter","float","utf8","pool","LongBits","window","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","node","isInteger","Number","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","values","options","comment","comments","ReflectionObject","TypeError","valuesById","reserved","className","Namespace","fromJSON","toJSON","keepComments","isReservedId","isReservedName","allow_alias","g","Function","eval","parent","resolved","filename","Root","defineProperties","ptr","fullName","unshift","join","onAdd","_handleAdd","onRemove","_handleRemove","resolve","getOption","setOption","setOptions","Root_","Field","rule","extend","ruleRe","required","optional","repeated","map","partOf","typeDefault","defaultValue","long","types","resolvedType","extensionField","declaringField","_packed","defaults","lookupTypeOrEnum","packed","fromNumber","buf","decode","write","fieldId","fieldType","fieldRule","fieldName","default","Type_","ProcessEmitWarning","warning","console","warn","init","$getMaxListeners","that","_maxListeners","defaultMaxListeners","_addListener","target","listener","prepend","events","existing","_events","_eventsCount","newListener","emit","push","warned","w","emitter","count","onceWrapper","args","arguments","fired","removeListener","wrapFn","ReflectApply","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","list","pop","ret","ReflectOwnKeys","R","Reflect","apply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","isNaN","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","position","originalListener","shift","off","removeAllListeners","rawListeners","eventNames","startsWith","prefix","lastIndexOf","isFunction","log","level","logger","backoff","step","min","max","jitter","random","interval","pow","errorExists","data","arrayToJSON","nested","_nestedArray","clearCache","namespace","Service","addJSON","nestedArray","nestedJson","ns","names","fields","methods","getEnum","prev","split","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","slice","found","indexOf","lookupType","lookupEnum","lookupService","Service_","Enum_","bake","offset","basic","mapKey","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","setPrototypeOf","__proto__","Centrifuge","_typeof","Symbol","iterator","_createClass","props","descriptor","protoProps","staticProps","_events2","_subscription","_subscription2","_json","_utils","_EventEmitter","url","_this","_url","_websocket","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_lastSeq","_lastGen","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_config","debug","websocket","sockjs","promise","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","token","params","headers","callback","_this2","query","_debug","JSON","stringify","xhr","XMLHttpRequest","ActiveXObject","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","_log","setTimeout","send","WebSocket","format","_formatOverride","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","assign","_setFormat","SockJS","newStatus","xhrID","abort","reconnect","_stopPing","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","_this3","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","Date","_call","then","resolveCtx","_connectResponse","decodeCommandResult","CONNECT","result","next","rejectCtx","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_this4","method","RPC","isConnected","Promise","reject","SEND","_transportSend","PUBLISH","_this5","replies","decodeReplies","_dispatchReply","_this6","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","close","_this7","_refreshFailed","clientID","_newXHRID","cb","resp","round","REFRESH","_refreshResponse","_refreshError","_ajax","_this8","_this9","expires","client","_getTTLMilliseconds","ttl","_this10","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","_this11","subRefreshTimeout","_subRefresh","_this12","isResubscribe","_this13","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","seq","_getLastSeq","gen","_getLastGen","epoch","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","_this14","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_this15","_isSubscribing","_setSubscribeError","isRecover","_this16","recovered","_setSubscribeSuccess","pubs","publications","reverse","_handlePublication","recoverable","_recoverable","reply","info","leave","unsub","unsubscribe","resubscribe","subscribe","pub","decodePush","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","_handleReply","_handlePush","messages","_this17","PING","_pingResponse","lastSeq","lastGen","lastEpoch","_this18","_nextMessageId","_isConnected","_ping","_flush","_this19","authChannels","batch","_ret2","currentSub","_setEvents","_isUnsubscribed","Subscription","_STATE_NEW","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","errContext","_resolve","_reject","knownEvents","ev","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","subPromise","_isError","res","rej","_nextPromiseId","_methodCall","PRESENCE","PRESENCE_STATS","HISTORY","encodedCommands","encodedReplies","methodType","pushType","Op","fn","noop","State","writer","head","tail","states","Writer","writeByte","pos","writeVarint32","VarintOp","writeVarint64","writeFixed32","BufferWriter","alloc","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","string","fork","reset","ldelim","finish","BufferWriter_","indexOutOfRange","reader","writeLength","Reader","buffer","readLongVarint","readFixed32_end","end","readFixed64","BufferReader","create_array","isBuffer","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","OneOf","oneof","fieldsArray","addFieldsToParent","field","splice","oneofName","Message","encode","encodeDelimited","decodeDelimited","verify","fromObject","pending","moduleName","mod","genTypePartial","fieldIndex","ref","group","encoder","mtype","sort","_fieldsArray","keyType","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","MapField","decoder","verifier","converter","wrappers","fieldsById","oneofsArray","generateConstructor","ctorProperties","inherited","filter","setup","wrapper","originalThis","resolvedKeyType","fieldKeyType","fieldValueType","_methodsArray","service","Method","rpc","methodsArray","rpcImpl","requestDelimited","responseDelimited","rpcService","methodName","q","resolvedRequestType","resolvedResponseType","requestType","responseType","requestStream","responseStream","missing","rfield","invalid","expected","genVerifyValue","j","genVerifyKey","seenFirstField","oneofProp","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","low","high","arrayDefault","fromCharCode","hasKs2","type_url","substr","deferred","files","SYNC","tryHandleExtension","extendedType","sisterField","common","resolvePath","load","sync","source","imports","weakImports","queued","weak","idx","altname","readFileSync","loadSync","exposeRe","parse_","common_","_protobuf","CentrifugeProtobuf","ProtobufDecoder","ProtobufEncoder","protobuf","require","proto","methodValues","protobufMethodType","methodSchema","protobufPushType","PushSchema","Push","Command","Reply","_decode","_Centrifuge","build","configure","ceil","b64","s64","t","parts","chunk","charCodeAt","evt","Float32Array","writeFloat_f32_cpy","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","le","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","sign","exponent","LN2","mantissa","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","c1","c2","SIZE","MAX","slab","zero","parseInt","fromString","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","byteLength","utf8Slice","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","functionParams","functionName","Codegen","formatStringOrScope","verbose","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","body","functionNameOverride","readFile","contents","binary","overrideMimeType","isAbsolute","normalize","absolute","originPath","includePath","alreadyNormalized","MethodType","PushType","ClientInfo","user","conn_info","chan_info","Publication","uid","Join","Leave","Unsub","ConnectRequest","ConnectResult","version","RefreshRequest","RefreshResult","SubscribeRequest","SubscribeResult","SubRefreshRequest","SubRefreshResult","UnsubscribeRequest","UnsubscribeResult","PublishRequest","PublishResult","PresenceRequest","PresenceResult","presence","PresenceStatsRequest","PresenceStatsResult","num_clients","num_users","HistoryRequest","HistoryResult","PingRequest","PingResult","RPCRequest","RPCResult","SendRequest"],"mappings":"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","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 32);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = __webpack_require__(1);\r\n\r\nvar roots = __webpack_require__(20);\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = __webpack_require__(46);\r\nutil.fetch   = __webpack_require__(47);\r\nutil.path    = __webpack_require__(48);\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = __webpack_require__(22);\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = __webpack_require__(2);\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(30))());\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = __webpack_require__(17);\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = __webpack_require__(37);\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = __webpack_require__(38);\r\n\r\n// float handling accross browsers\r\nutil.float = __webpack_require__(39);\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = __webpack_require__(18);\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = __webpack_require__(40);\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = __webpack_require__(41);\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = __webpack_require__(42);\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = __webpack_require__(8),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = __webpack_require__(2),\r\n    types = __webpack_require__(9),\r\n    util  = __webpack_require__(0);\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startsWith = startsWith;\nexports.isFunction = isFunction;\nexports.log = log;\nexports.backoff = backoff;\nexports.errorExists = errorExists;\nfunction startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nfunction isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nfunction log(level, args) {\n  if (global.console) {\n    var logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nfunction backoff(step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nfunction errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = __webpack_require__(5),\r\n    util     = __webpack_require__(0);\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Centrifuge = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _subscription = __webpack_require__(11);\n\nvar _subscription2 = _interopRequireDefault(_subscription);\n\nvar _json = __webpack_require__(12);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _errorTimeout = 'timeout';\nvar _errorConnectionClosed = 'connection closed';\n\nvar Centrifuge = exports.Centrifuge = function (_EventEmitter) {\n  _inherits(Centrifuge, _EventEmitter);\n\n  function Centrifuge(url, options) {\n    _classCallCheck(this, Centrifuge);\n\n    var _this = _possibleConstructorReturn(this, (Centrifuge.__proto__ || Object.getPrototypeOf(Centrifuge)).call(this));\n\n    _this._url = url;\n    _this._websocket = null;\n    _this._sockjs = null;\n    _this._isSockjs = false;\n    _this._binary = false;\n    _this._methodType = null;\n    _this._pushType = null;\n    _this._encoder = null;\n    _this._decoder = null;\n    _this._status = 'disconnected';\n    _this._reconnect = true;\n    _this._reconnecting = false;\n    _this._transport = null;\n    _this._transportName = null;\n    _this._transportClosed = true;\n    _this._messageId = 0;\n    _this._clientID = null;\n    _this._refreshRequired = false;\n    _this._subs = {};\n    _this._lastSeq = {};\n    _this._lastGen = {};\n    _this._lastEpoch = {};\n    _this._messages = [];\n    _this._isBatching = false;\n    _this._isSubscribeBatching = false;\n    _this._privateChannels = {};\n    _this._numRefreshFailed = 0;\n    _this._refreshTimeout = null;\n    _this._pingTimeout = null;\n    _this._pongTimeout = null;\n    _this._subRefreshTimeouts = {};\n    _this._retries = 0;\n    _this._callbacks = {};\n    _this._latency = null;\n    _this._latencyStart = null;\n    _this._connectData = null;\n    _this._token = null;\n    _this._xhrID = 0;\n    _this._xhrs = {};\n    _this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: ['websocket', 'xdr-streaming', 'xhr-streaming', 'eventsource', 'iframe-eventsource', 'iframe-htmlfile', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    _this._configure(options);\n    return _this;\n  }\n\n  _createClass(Centrifuge, [{\n    key: 'setToken',\n    value: function setToken(token) {\n      this._token = token;\n    }\n  }, {\n    key: 'setConnectData',\n    value: function setConnectData(data) {\n      this._connectData = data;\n    }\n  }, {\n    key: '_ajax',\n    value: function _ajax(url, params, headers, data, callback) {\n      var _this2 = this;\n\n      var query = '';\n      this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n      var xhr = global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP');\n\n      for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n          if (query.length > 0) {\n            query += '&';\n          }\n          query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n      }\n      if (query.length > 0) {\n        query = '?' + query;\n      }\n      xhr.open('POST', url + query, true);\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      for (var headerName in headers) {\n        if (headers.hasOwnProperty(headerName)) {\n          xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var _data = void 0,\n                parsed = false;\n            try {\n              _data = JSON.parse(xhr.responseText);\n              parsed = true;\n            } catch (e) {\n              callback({\n                error: 'Invalid JSON. Data was: ' + xhr.responseText,\n                status: 200,\n                data: null\n              });\n            }\n            if (parsed) {\n              // prevents double execution.\n              callback({\n                data: _data,\n                status: 200\n              });\n            }\n          } else {\n            _this2._log('wrong status code in AJAX response', xhr.status);\n            callback({\n              status: xhr.status,\n              data: null\n            });\n          }\n        }\n      };\n      setTimeout(function () {\n        return xhr.send(JSON.stringify(data));\n      }, 20);\n      return xhr;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      (0, _utils.log)('info', arguments);\n    }\n  }, {\n    key: '_debug',\n    value: function _debug() {\n      if (this._config.debug === true) {\n        (0, _utils.log)('debug', arguments);\n      }\n    }\n  }, {\n    key: '_websocketSupported',\n    value: function _websocketSupported() {\n      if (this._config.websocket !== null) {\n        return true;\n      }\n      return !(typeof WebSocket !== 'function' && (typeof WebSocket === 'undefined' ? 'undefined' : _typeof(WebSocket)) !== 'object');\n    }\n  }, {\n    key: '_setFormat',\n    value: function _setFormat(format) {\n      if (this._formatOverride(format)) {\n        return;\n      }\n      if (format === 'protobuf') {\n        throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n      }\n      this._binary = false;\n      this._methodType = _json.JsonMethodType;\n      this._pushType = _json.JsonPushType;\n      this._encoder = new _json.JsonEncoder();\n      this._decoder = new _json.JsonDecoder();\n    }\n  }, {\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      return false;\n    }\n  }, {\n    key: '_configure',\n    value: function _configure(configuration) {\n      if (!('Promise' in global)) {\n        throw new Error('Promise polyfill required');\n      }\n\n      Object.assign(this._config, configuration || {});\n      this._debug('centrifuge config', this._config);\n\n      if (!this._url) {\n        throw new Error('url required');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n        this._setFormat('protobuf');\n      } else {\n        this._setFormat('json');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'http')) {\n        this._debug('client will try to connect to SockJS endpoint');\n        if (this._config.sockjs !== null) {\n          this._debug('SockJS explicitly provided in options');\n          this._sockjs = this._config.sockjs;\n        } else {\n          if (typeof global.SockJS === 'undefined') {\n            throw new Error('SockJS not found, use ws:// in url or include SockJS');\n          }\n          this._debug('use globally defined SockJS');\n          this._sockjs = global.SockJS;\n        }\n      } else {\n        this._debug('client will connect to websocket endpoint');\n      }\n    }\n  }, {\n    key: '_setStatus',\n    value: function _setStatus(newStatus) {\n      if (this._status !== newStatus) {\n        this._debug('Status', this._status, '->', newStatus);\n        this._status = newStatus;\n      }\n    }\n  }, {\n    key: '_isDisconnected',\n    value: function _isDisconnected() {\n      return this._status === 'disconnected';\n    }\n  }, {\n    key: '_isConnecting',\n    value: function _isConnecting() {\n      return this._status === 'connecting';\n    }\n  }, {\n    key: '_isConnected',\n    value: function _isConnected() {\n      return this._status === 'connected';\n    }\n  }, {\n    key: '_nextMessageId',\n    value: function _nextMessageId() {\n      return ++this._messageId;\n    }\n  }, {\n    key: '_resetRetry',\n    value: function _resetRetry() {\n      this._debug('reset retries count to 0');\n      this._retries = 0;\n    }\n  }, {\n    key: '_getRetryInterval',\n    value: function _getRetryInterval() {\n      var interval = (0, _utils.backoff)(this._retries, this._config.minRetry, this._config.maxRetry);\n\n      this._retries += 1;\n      return interval;\n    }\n  }, {\n    key: '_abortInflightXHRs',\n    value: function _abortInflightXHRs() {\n      for (var xhrID in this._xhrs) {\n        try {\n          this._xhrs[xhrID].abort();\n        } catch (e) {\n          this._debug('error aborting xhr', e);\n        }\n        delete this._xhrs[xhrID];\n      }\n    }\n  }, {\n    key: '_clearConnectedState',\n    value: function _clearConnectedState(reconnect) {\n      this._clientID = null;\n      this._stopPing();\n\n      // fire errbacks of registered outgoing calls.\n      for (var id in this._callbacks) {\n        if (this._callbacks.hasOwnProperty(id)) {\n          var callbacks = this._callbacks[id];\n          clearTimeout(callbacks.timeout);\n          var errback = callbacks.errback;\n          if (!errback) {\n            continue;\n          }\n          errback({ error: this._createErrorObject('disconnected') });\n        }\n      }\n      this._callbacks = {};\n\n      // fire unsubscribe events\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n\n          if (reconnect) {\n            if (sub._isSuccess()) {\n              sub._triggerUnsubscribe();\n              sub._recover = true;\n            }\n            if (sub._shouldResubscribe()) {\n              sub._setSubscribing();\n            }\n          } else {\n            sub._setUnsubscribed();\n          }\n        }\n      }\n\n      this._abortInflightXHRs();\n\n      // clear refresh timer\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      // clear sub refresh timers\n      for (var _channel in this._subRefreshTimeouts) {\n        if (this._subRefreshTimeouts.hasOwnProperty(_channel) && this._subRefreshTimeouts[_channel]) {\n          this._clearSubRefreshTimeout(_channel);\n        }\n      }\n      this._subRefreshTimeouts = {};\n\n      if (!this._reconnect) {\n        // completely clear subscriptions\n        this._subs = {};\n      }\n    }\n  }, {\n    key: '_isTransportOpen',\n    value: function _isTransportOpen() {\n      if (this._isSockjs) {\n        return this._transport && this._transport.transport && this._transport.transport.readyState === this._transport.transport.OPEN;\n      }\n      return this._transport && this._transport.readyState === this._transport.OPEN;\n    }\n  }, {\n    key: '_transportSend',\n    value: function _transportSend(commands) {\n      if (!commands.length) {\n        return true;\n      }\n\n      if (!this._isTransportOpen()) {\n        // resolve pending commands with error if transport is not open\n        for (var command in commands) {\n          var id = command.id;\n          if (!(id in this._callbacks)) {\n            continue;\n          }\n          var callbacks = this._callbacks[id];\n          clearTimeout(this._callbacks[id].timeout);\n          delete this._callbacks[id];\n          var errback = callbacks.errback;\n          errback({ error: this._createErrorObject(_errorConnectionClosed, 0) });\n        }\n        return false;\n      }\n      this._transport.send(this._encoder.encodeCommands(commands));\n      return true;\n    }\n  }, {\n    key: '_setupTransport',\n    value: function _setupTransport() {\n      var _this3 = this;\n\n      this._isSockjs = false;\n\n      // detect transport to use - SockJS or Websocket\n      if (this._sockjs !== null) {\n        var sockjsOptions = {\n          transports: this._config.sockjsTransports\n        };\n\n        if (this._config.sockjsServer !== null) {\n          sockjsOptions.server = this._config.sockjsServer;\n        }\n        this._isSockjs = true;\n        this._transport = new this._sockjs(this._url, null, sockjsOptions);\n      } else {\n        if (!this._websocketSupported()) {\n          this._debug('No Websocket support and no SockJS configured, can not connect');\n          return;\n        }\n        if (this._config.websocket !== null) {\n          this._websocket = this._config.websocket;\n        } else {\n          this._websocket = WebSocket;\n        }\n        this._transport = new this._websocket(this._url);\n        if (this._binary === true) {\n          this._transport.binaryType = 'arraybuffer';\n        }\n      }\n\n      this._transport.onopen = function () {\n        _this3._transportClosed = false;\n\n        if (_this3._isSockjs) {\n          _this3._transportName = 'sockjs-' + _this3._transport.transport;\n          _this3._transport.onheartbeat = function () {\n            return _this3._restartPing();\n          };\n        } else {\n          _this3._transportName = 'websocket';\n        }\n\n        // Can omit method here due to zero value.\n        var msg = {\n          // method: this._methodType.CONNECT\n        };\n\n        if (_this3._token || _this3._connectData) {\n          msg.params = {};\n        }\n\n        if (_this3._token) {\n          msg.params.token = _this3._token;\n        }\n\n        if (_this3._connectData) {\n          msg.params.data = _this3._connectData;\n        }\n\n        _this3._latencyStart = new Date();\n        _this3._call(msg).then(function (resolveCtx) {\n          _this3._connectResponse(_this3._decoder.decodeCommandResult(_this3._methodType.CONNECT, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          var err = rejectCtx.error;\n          if (err.code === 109) {\n            // token expired.\n            _this3._refreshRequired = true;\n          }\n          _this3._disconnect('connect error', true);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      };\n\n      this._transport.onerror = function (error) {\n        _this3._debug('transport level error', error);\n      };\n\n      this._transport.onclose = function (closeEvent) {\n        _this3._transportClosed = true;\n        var reason = _errorConnectionClosed;\n        var needReconnect = true;\n\n        if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n          try {\n            var advice = JSON.parse(closeEvent.reason);\n            _this3._debug('reason is an advice object', advice);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            _this3._debug('reason is a plain string', reason);\n          }\n        }\n\n        // onTransportClose callback should be executed every time transport was closed.\n        // This can be helpful to catch failed connection events (because our disconnect\n        // event only called once and every future attempts to connect do not fire disconnect\n        // event again).\n        if (_this3._config.onTransportClose !== null) {\n          _this3._config.onTransportClose({\n            event: closeEvent,\n            reason: reason,\n            reconnect: needReconnect\n          });\n        }\n\n        _this3._disconnect(reason, needReconnect);\n\n        if (_this3._reconnect === true) {\n          _this3._reconnecting = true;\n          var interval = _this3._getRetryInterval();\n\n          _this3._debug('reconnect after ' + interval + ' milliseconds');\n          setTimeout(function () {\n            if (_this3._reconnect === true) {\n              if (_this3._refreshRequired) {\n                _this3._refresh();\n              } else {\n                _this3._connect();\n              }\n            }\n          }, interval);\n        }\n      };\n\n      this._transport.onmessage = function (event) {\n        _this3._dataReceived(event.data);\n      };\n    }\n  }, {\n    key: 'rpc',\n    value: function rpc(data) {\n      var _this4 = this;\n\n      var msg = {\n        method: this._methodType.RPC,\n        params: {\n          data: data\n        }\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      return this._call(msg).then(function (resolveCtx) {\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n        return _this4._decoder.decodeCommandResult(_this4._methodType.RPC, resolveCtx.result);\n      }, function (rejectCtx) {\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n        return rejectCtx.error;\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(data) {\n      var msg = {\n        method: this._methodType.SEND,\n        params: {\n          data: data\n        }\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      var sent = this._transportSend([msg]); // can send async message to server without id set\n      if (!sent) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      };\n      return Promise.resolve({});\n    }\n  }, {\n    key: 'publish',\n    value: function publish(channel, data) {\n      var msg = {\n        method: this._methodType.PUBLISH,\n        params: {\n          channel: channel,\n          data: data\n        }\n      };\n\n      if (!this.isConnected()) {\n        return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n      }\n\n      return this._call(msg).then(function (result) {\n        if (result.next) {\n          result.next();\n        }\n        return {};\n      });\n    }\n  }, {\n    key: '_dataReceived',\n    value: function _dataReceived(data) {\n      var _this5 = this;\n\n      var replies = this._decoder.decodeReplies(data);\n      // we have to guarantee order of events in replies processing - i.e. start processing\n      // next reply only when we finished processing of current one. Without syncing things in\n      // this way we could get wrong publication events order as reply promises resolve\n      // on next loop tick so for loop continues before we finished emitting all reply events.\n      var p = Promise.resolve();\n\n      var _loop = function _loop(i) {\n        if (replies.hasOwnProperty(i)) {\n          p = p.then(function () {\n            return _this5._dispatchReply(replies[i]);\n          });\n        }\n      };\n\n      for (var i in replies) {\n        _loop(i);\n      }\n      this._restartPing();\n    }\n  }, {\n    key: '_call',\n    value: function _call(msg) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        var id = _this6._addMessage(msg);\n        _this6._registerCall(id, resolve, reject);\n      });\n    }\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      if (this.isConnected()) {\n        this._debug('connect called when already connected');\n        return;\n      }\n      if (this._status === 'connecting') {\n        return;\n      }\n\n      this._debug('start connecting');\n      this._setStatus('connecting');\n      this._clientID = null;\n      this._reconnect = true;\n      this._setupTransport();\n    }\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(reason, shouldReconnect) {\n\n      if (this._isDisconnected()) {\n        return;\n      }\n\n      this._debug('disconnected:', reason, shouldReconnect);\n\n      var reconnect = shouldReconnect || false;\n\n      if (reconnect === false) {\n        this._reconnect = false;\n      }\n\n      this._clearConnectedState(reconnect);\n\n      if (!this._isDisconnected()) {\n        this._setStatus('disconnected');\n        if (this._refreshTimeout) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._reconnecting === false) {\n          this.emit('disconnect', {\n            reason: reason,\n            reconnect: reconnect\n          });\n        }\n      }\n\n      if (!this._transportClosed) {\n        this._transport.close();\n      }\n    }\n  }, {\n    key: '_refreshFailed',\n    value: function _refreshFailed() {\n      this._numRefreshFailed = 0;\n      if (!this._isDisconnected()) {\n        this._disconnect('refresh failed', false);\n      }\n      if (this._config.onRefreshFailed !== null) {\n        this._config.onRefreshFailed();\n      }\n    }\n  }, {\n    key: '_refresh',\n    value: function _refresh() {\n      var _this7 = this;\n\n      // ask application for new connection token.\n      this._debug('refresh token');\n\n      if (this._config.refreshAttempts === 0) {\n        this._debug('refresh attempts set to 0, do not send refresh request at all');\n        this._refreshFailed();\n        return;\n      }\n\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this7._xhrs) {\n          delete _this7._xhrs[xhrID];\n        }\n        if (_this7._clientID !== clientID) {\n          return;\n        }\n        if (resp.error || resp.status !== 200) {\n          // We don't perform any connection status related actions here as we are\n          // relying on server that must close connection eventually.\n          if (resp.error) {\n            _this7._debug('error refreshing connection token', resp.error);\n          } else {\n            _this7._debug('error refreshing connection token: wrong status code', resp.status);\n          }\n          _this7._numRefreshFailed++;\n          if (_this7._refreshTimeout !== null) {\n            clearTimeout(_this7._refreshTimeout);\n            _this7._refreshTimeout = null;\n          }\n          if (_this7._config.refreshAttempts !== null && _this7._numRefreshFailed >= _this7._config.refreshAttempts) {\n            _this7._refreshFailed();\n            return;\n          }\n          var jitter = Math.round(Math.random() * 1000 * Math.max(_this7._numRefreshFailed, 20));\n          var interval = _this7._config.refreshInterval + jitter;\n          _this7._refreshTimeout = setTimeout(function () {\n            return _this7._refresh();\n          }, interval);\n          return;\n        }\n        _this7._numRefreshFailed = 0;\n        _this7._token = resp.data.token;\n        if (!_this7._token) {\n          _this7._refreshFailed();\n          return;\n        }\n        if (_this7._isDisconnected() && _this7._reconnect) {\n          _this7._debug('token refreshed, connect from scratch');\n          _this7._connect();\n        } else {\n          _this7._debug('send refreshed token');\n          var msg = {\n            method: _this7._methodType.REFRESH,\n            params: {\n              token: _this7._token\n            }\n          };\n          _this7._call(msg).then(function (resolveCtx) {\n            _this7._refreshResponse(_this7._decoder.decodeCommandResult(_this7._methodType.REFRESH, resolveCtx.result));\n            if (resolveCtx.next) {\n              resolveCtx.next();\n            }\n          }, function (rejectCtx) {\n            _this7._refreshError(rejectCtx.error);\n            if (rejectCtx.next) {\n              rejectCtx.next();\n            }\n          });\n        }\n      };\n\n      if (this._config.onRefresh !== null) {\n        var context = {};\n        this._config.onRefresh(context, cb);\n      } else {\n        var xhr = this._ajax(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: '_refreshError',\n    value: function _refreshError(err) {\n      var _this8 = this;\n\n      this._debug('refresh error', err);\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      var interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n      this._refreshTimeout = setTimeout(function () {\n        return _this8._refresh();\n      }, interval);\n    }\n  }, {\n    key: '_refreshResponse',\n    value: function _refreshResponse(result) {\n      var _this9 = this;\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (result.expires) {\n        this._clientID = result.client;\n        this._refreshTimeout = setTimeout(function () {\n          return _this9._refresh();\n        }, this._getTTLMilliseconds(result.ttl));\n      }\n    }\n  }, {\n    key: '_newXHRID',\n    value: function _newXHRID() {\n      this._xhrID++;\n      return this._xhrID;\n    }\n  }, {\n    key: '_subRefresh',\n    value: function _subRefresh(channel) {\n      var _this10 = this;\n\n      this._debug('refresh subscription token for channel', channel);\n\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        this._clearSubRefreshTimeout(channel);\n      } else {\n        return;\n      }\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this10._xhrs) {\n          delete _this10._xhrs[xhrID];\n        }\n        if (resp.error || resp.status !== 200 || _this10._clientID !== clientID) {\n          return;\n        }\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var i in data.channels) {\n            var channelData = resp.data.channels[i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        var token = channelsData[channel];\n        if (!token) {\n          return;\n        }\n        var msg = {\n          method: _this10._methodType.SUB_REFRESH,\n          params: {\n            channel: channel,\n            token: token\n          }\n        };\n\n        var sub = _this10._getSub(channel);\n        if (sub === null) {\n          return;\n        }\n\n        _this10._call(msg).then(function (resolveCtx) {\n          _this10._subRefreshResponse(channel, _this10._decoder.decodeCommandResult(_this10._methodType.SUB_REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          _this10._subRefreshError(channel, rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      };\n\n      var data = {\n        client: this._clientID,\n        channels: [channel]\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        var xhr = this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: '_clearSubRefreshTimeout',\n    value: function _clearSubRefreshTimeout(channel) {\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        clearTimeout(this._subRefreshTimeouts[channel]);\n        delete this._subRefreshTimeouts[channel];\n      }\n    }\n  }, {\n    key: '_subRefreshError',\n    value: function _subRefreshError(channel, err) {\n      var _this11 = this;\n\n      this._debug('subscription refresh error', channel, err);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      var jitter = Math.round(Math.random() * 1000);\n      var subRefreshTimeout = setTimeout(function () {\n        return _this11._subRefresh(channel);\n      }, this._config.subRefreshInterval + jitter);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      return;\n    }\n  }, {\n    key: '_subRefreshResponse',\n    value: function _subRefreshResponse(channel, result) {\n      var _this12 = this;\n\n      this._debug('subscription refresh success', channel);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this12._subRefresh(channel);\n        }, this._getTTLMilliseconds(result.ttl));\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n      return;\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(sub, isResubscribe) {\n      var _this13 = this;\n\n      this._debug('subscribing on', sub.channel);\n      var channel = sub.channel;\n\n      if (!(channel in this._subs)) {\n        this._subs[channel] = sub;\n      }\n\n      if (!this.isConnected()) {\n        // subscribe will be called later\n        sub._setNew();\n        return;\n      }\n\n      sub._setSubscribing(isResubscribe);\n\n      var msg = {\n        method: this._methodType.SUBSCRIBE,\n        params: {\n          channel: channel\n        }\n      };\n\n      // If channel name does not start with privateChannelPrefix - then we\n      // can just send subscription message to Centrifuge. If channel name\n      // starts with privateChannelPrefix - then this is a private channel\n      // and we should ask web application backend for permission first.\n      if ((0, _utils.startsWith)(channel, this._config.privateChannelPrefix)) {\n        // private channel.\n        if (this._isSubscribeBatching) {\n          this._privateChannels[channel] = true;\n        } else {\n          this.startSubscribeBatching();\n          this._subscribe(sub);\n          this.stopSubscribeBatching();\n        }\n      } else {\n        var recover = sub._needRecover();\n\n        if (recover === true) {\n          msg.params.recover = true;\n          var seq = this._getLastSeq(channel);\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          var gen = this._getLastGen(channel);\n          if (gen) {\n            msg.params.gen = gen;\n          }\n          var epoch = this._getLastEpoch(channel);\n          if (epoch) {\n            msg.params.epoch = epoch;\n          }\n        }\n\n        this._call(msg).then(function (resolveCtx) {\n          _this13._subscribeResponse(channel, recover, _this13._decoder.decodeCommandResult(_this13._methodType.SUBSCRIBE, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, function (rejectCtx) {\n          _this13._subscribeError(channel, rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    }\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe(sub) {\n      if (this.isConnected()) {\n        // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n        this._addMessage({\n          method: this._methodType.UNSUBSCRIBE,\n          params: {\n            channel: sub.channel\n          }\n        });\n      }\n    }\n  }, {\n    key: '_getTTLMilliseconds',\n    value: function _getTTLMilliseconds(ttl) {\n      // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n      return Math.min(ttl * 1000, 2147483647);\n    }\n  }, {\n    key: 'getSub',\n    value: function getSub(channel) {\n      return this._getSub(channel);\n    }\n  }, {\n    key: '_getSub',\n    value: function _getSub(channel) {\n      var sub = this._subs[channel];\n      if (!sub) {\n        return null;\n      }\n      return sub;\n    }\n  }, {\n    key: '_connectResponse',\n    value: function _connectResponse(result) {\n      var _this14 = this;\n\n      var wasReconnecting = this._reconnecting;\n      this._reconnecting = false;\n      this._resetRetry();\n      this._refreshRequired = false;\n\n      if (this.isConnected()) {\n        return;\n      }\n\n      if (this._latencyStart !== null) {\n        this._latency = new Date().getTime() - this._latencyStart.getTime();\n        this._latencyStart = null;\n      }\n\n      this._clientID = result.client;\n      this._setStatus('connected');\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n\n      if (result.expires) {\n        this._refreshTimeout = setTimeout(function () {\n          return _this14._refresh();\n        }, this._getTTLMilliseconds(result.ttl));\n      }\n\n      this.startBatching();\n      this.startSubscribeBatching();\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n          if (sub._shouldResubscribe()) {\n            this._subscribe(sub, wasReconnecting);\n          }\n        }\n      }\n      this.stopSubscribeBatching();\n      this.stopBatching();\n\n      this._startPing();\n\n      var ctx = {\n        client: result.client,\n        transport: this._transportName,\n        latency: this._latency\n      };\n      if (result.data) {\n        ctx.data = result.data;\n      }\n\n      this.emit('connect', ctx);\n    }\n  }, {\n    key: '_stopPing',\n    value: function _stopPing() {\n      if (this._pongTimeout !== null) {\n        clearTimeout(this._pongTimeout);\n        this._pongTimeout = null;\n      }\n      if (this._pingTimeout !== null) {\n        clearTimeout(this._pingTimeout);\n        this._pingTimeout = null;\n      }\n    }\n  }, {\n    key: '_startPing',\n    value: function _startPing() {\n      var _this15 = this;\n\n      if (this._config.ping !== true || this._config.pingInterval <= 0) {\n        return;\n      }\n      if (!this.isConnected()) {\n        return;\n      }\n\n      this._pingTimeout = setTimeout(function () {\n        if (!_this15.isConnected()) {\n          _this15._stopPing();\n          return;\n        }\n        _this15.ping();\n        _this15._pongTimeout = setTimeout(function () {\n          _this15._disconnect('no ping', true);\n        }, _this15._config.pongWaitTimeout);\n      }, this._config.pingInterval);\n    }\n  }, {\n    key: '_restartPing',\n    value: function _restartPing() {\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_subscribeError',\n    value: function _subscribeError(channel, error) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n      if (error.code === 0 && error.message === _errorTimeout) {\n        // client side timeout.\n        this._disconnect('timeout', true);\n        return;\n      }\n      sub._setSubscribeError(error);\n    }\n  }, {\n    key: '_subscribeResponse',\n    value: function _subscribeResponse(channel, isRecover, result) {\n      var _this16 = this;\n\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n\n      var recovered = false;\n      if ('recovered' in result) {\n        recovered = result.recovered;\n      }\n      sub._setSubscribeSuccess(recovered);\n\n      var pubs = result.publications;\n      if (pubs && pubs.length > 0) {\n        pubs = pubs.reverse();\n        for (var i in pubs) {\n          if (pubs.hasOwnProperty(i)) {\n            this._handlePublication(channel, pubs[i]);\n          }\n        }\n      }\n\n      if (result.recoverable && (!isRecover || !recovered)) {\n        this._lastSeq[channel] = result.seq || 0;\n        this._lastGen[channel] = result.gen || 0;\n      }\n\n      this._lastEpoch[channel] = result.epoch || '';\n\n      if (result.recoverable) {\n        sub._recoverable = true;\n      }\n\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this16._subRefresh(channel);\n        }, this._getTTLMilliseconds(result.ttl));\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n    }\n  }, {\n    key: '_handleReply',\n    value: function _handleReply(reply, next) {\n      var id = reply.id;\n      var result = reply.result;\n\n      if (!(id in this._callbacks)) {\n        next();\n        return;\n      }\n      var callbacks = this._callbacks[id];\n      clearTimeout(this._callbacks[id].timeout);\n      delete this._callbacks[id];\n\n      if (!(0, _utils.errorExists)(reply)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n          return;\n        }\n        callback({ result: result, next: next });\n      } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n          next();\n          return;\n        }\n        var error = reply.error;\n        errback({ error: error, next: next });\n      }\n    }\n  }, {\n    key: '_handleJoin',\n    value: function _handleJoin(channel, join) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('join', { 'info': join.info });\n    }\n  }, {\n    key: '_handleLeave',\n    value: function _handleLeave(channel, leave) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('leave', { 'info': leave.info });\n    }\n  }, {\n    key: '_handleUnsub',\n    value: function _handleUnsub(channel, unsub) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.unsubscribe();\n      if (unsub.resubscribe === true) {\n        sub.subscribe();\n      }\n    }\n  }, {\n    key: '_handlePublication',\n    value: function _handlePublication(channel, pub) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (pub.seq !== undefined) {\n        this._lastSeq[channel] = pub.seq;\n      }\n      if (pub.gen !== undefined) {\n        this._lastGen[channel] = pub.gen;\n      }\n      sub.emit('publish', pub);\n    }\n  }, {\n    key: '_handleMessage',\n    value: function _handleMessage(message) {\n      this.emit('message', message.data);\n    }\n  }, {\n    key: '_handlePush',\n    value: function _handlePush(data, next) {\n      var push = this._decoder.decodePush(data);\n      var type = 0;\n      if ('type' in push) {\n        type = push['type'];\n      }\n      var channel = push.channel;\n\n      if (type === this._pushType.PUBLICATION) {\n        var pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n        this._handlePublication(channel, pub);\n      } else if (type === this._pushType.MESSAGE) {\n        var message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n        this._handleMessage(message);\n      } else if (type === this._pushType.JOIN) {\n        var join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n        this._handleJoin(channel, join);\n      } else if (type === this._pushType.LEAVE) {\n        var leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n        this._handleLeave(channel, leave);\n      } else if (type === this._pushType.UNSUB) {\n        var unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n        this._handleUnsub(channel, unsub);\n      }\n      next();\n    }\n  }, {\n    key: '_dispatchReply',\n    value: function _dispatchReply(reply) {\n      var next;\n      var p = new Promise(function (resolve) {\n        next = resolve;\n      });\n\n      if (reply === undefined || reply === null) {\n        this._debug('dispatch: got undefined or null reply');\n        next();\n        return p;\n      }\n\n      var id = reply.id;\n\n      if (id && id > 0) {\n        this._handleReply(reply, next);\n      } else {\n        this._handlePush(reply.result, next);\n      }\n\n      return p;\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var messages = this._messages.slice(0);\n      this._messages = [];\n      this._transportSend(messages);\n    }\n  }, {\n    key: '_ping',\n    value: function _ping() {\n      var _this17 = this;\n\n      var msg = {\n        method: this._methodType.PING\n      };\n      this._call(msg).then(function (resolveCtx) {\n        _this17._pingResponse(_this17._decoder.decodeCommandResult(_this17._methodType.PING, resolveCtx.result));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, function (rejectCtx) {\n        _this17._debug('ping error', rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  }, {\n    key: '_pingResponse',\n    value: function _pingResponse(result) {\n      if (!this.isConnected()) {\n        return;\n      }\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_getLastSeq',\n    value: function _getLastSeq(channel) {\n      var lastSeq = this._lastSeq[channel];\n      if (lastSeq) {\n        return lastSeq;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastGen',\n    value: function _getLastGen(channel) {\n      var lastGen = this._lastGen[channel];\n      if (lastGen) {\n        return lastGen;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastEpoch',\n    value: function _getLastEpoch(channel) {\n      var lastEpoch = this._lastEpoch[channel];\n      if (lastEpoch) {\n        return lastEpoch;\n      }\n      return '';\n    }\n  }, {\n    key: '_createErrorObject',\n    value: function _createErrorObject(message, code) {\n      var errObject = {\n        message: message,\n        code: code || 0\n      };\n\n      return errObject;\n    }\n  }, {\n    key: '_registerCall',\n    value: function _registerCall(id, callback, errback) {\n      var _this18 = this;\n\n      this._callbacks[id] = {\n        callback: callback,\n        errback: errback,\n        timeout: null\n      };\n      this._callbacks[id].timeout = setTimeout(function () {\n        delete _this18._callbacks[id];\n        if ((0, _utils.isFunction)(errback)) {\n          errback({ error: _this18._createErrorObject(_errorTimeout) });\n        }\n      }, this._config.timeout);\n    }\n  }, {\n    key: '_addMessage',\n    value: function _addMessage(message) {\n      var id = this._nextMessageId();\n      message.id = id;\n      if (this._isBatching === true) {\n        this._messages.push(message);\n      } else {\n        this._transportSend([message]);\n      }\n      return id;\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return this._isConnected();\n    }\n  }, {\n    key: 'connect',\n    value: function connect() {\n      this._connect();\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._disconnect('client', false);\n    }\n  }, {\n    key: 'ping',\n    value: function ping() {\n      return this._ping();\n    }\n  }, {\n    key: 'startBatching',\n    value: function startBatching() {\n      // start collecting messages without sending them to Centrifuge until flush\n      // method called\n      this._isBatching = true;\n    }\n  }, {\n    key: 'stopBatching',\n    value: function stopBatching() {\n      this._isBatching = false;\n      this._flush();\n    }\n  }, {\n    key: 'startSubscribeBatching',\n    value: function startSubscribeBatching() {\n      // start collecting private channels to create bulk authentication\n      // request to subscribeEndpoint when stopSubscribeBatching will be called\n      this._isSubscribeBatching = true;\n    }\n  }, {\n    key: 'stopSubscribeBatching',\n    value: function stopSubscribeBatching() {\n      var _this19 = this;\n\n      // create request to subscribeEndpoint with collected private channels\n      // to ask if this client can subscribe on each channel\n      this._isSubscribeBatching = false;\n      var authChannels = this._privateChannels;\n      this._privateChannels = {};\n\n      var channels = [];\n\n      for (var channel in authChannels) {\n        if (authChannels.hasOwnProperty(channel)) {\n          var sub = this._getSub(channel);\n          if (!sub) {\n            continue;\n          }\n          channels.push(channel);\n        }\n      }\n\n      if (channels.length === 0) {\n        this._debug('no private channels found, no need to make request');\n        return;\n      }\n\n      var data = {\n        client: this._clientID,\n        channels: channels\n      };\n\n      var clientID = this._clientID;\n      var xhrID = this._newXHRID();\n\n      var cb = function cb(resp) {\n        if (xhrID in _this19._xhrs) {\n          delete _this19._xhrs[xhrID];\n        }\n        if (_this19._clientID !== clientID) {\n          return;\n        }\n        if (resp.error || resp.status !== 200) {\n          _this19._debug('authorization request failed');\n          for (var i in channels) {\n            if (channels.hasOwnProperty(i)) {\n              var _channel2 = channels[i];\n              _this19._subscribeError(_channel2, _this19._createErrorObject('authorization request failed'));\n            }\n          }\n          return;\n        }\n\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var _i in resp.data.channels) {\n            var channelData = resp.data.channels[_i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        // try to send all subscriptions in one request.\n        var batch = false;\n\n        if (!_this19._isBatching) {\n          _this19.startBatching();\n          batch = true;\n        }\n\n        for (var _i2 in channels) {\n          if (channels.hasOwnProperty(_i2)) {\n            var _ret2 = function () {\n              var channel = channels[_i2];\n              var token = channelsData[channel];\n\n              if (!token) {\n                // subscription:error\n                _this19._subscribeError(channel, _this19._createErrorObject('permission denied', 103));\n                return 'continue';\n              } else {\n                var msg = {\n                  method: _this19._methodType.SUBSCRIBE,\n                  params: {\n                    channel: channel,\n                    token: token\n                  }\n                };\n\n                var _sub = _this19._getSub(channel);\n                if (_sub === null) {\n                  return 'continue';\n                }\n\n                var recover = _sub._needRecover();\n\n                if (recover === true) {\n                  msg.params.recover = true;\n                  var seq = _this19._getLastSeq(channel);\n                  if (seq) {\n                    msg.params.seq = seq;\n                  }\n                  var gen = _this19._getLastGen(channel);\n                  if (gen) {\n                    msg.params.gen = gen;\n                  }\n                  var epoch = _this19._getLastEpoch(channel);\n                  if (epoch) {\n                    msg.params.epoch = epoch;\n                  }\n                }\n                _this19._call(msg).then(function (resolveCtx) {\n                  _this19._subscribeResponse(channel, recover, _this19._decoder.decodeCommandResult(_this19._methodType.SUBSCRIBE, resolveCtx.result));\n                  if (resolveCtx.next) {\n                    resolveCtx.next();\n                  }\n                }, function (rejectCtx) {\n                  _this19._subscribeError(channel, rejectCtx.error);\n                  if (rejectCtx.next) {\n                    rejectCtx.next();\n                  }\n                });\n              }\n            }();\n\n            if (_ret2 === 'continue') continue;\n          }\n        }\n\n        if (batch) {\n          _this19.stopBatching();\n        }\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        var xhr = this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n        this._xhrs[xhrID] = xhr;\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(channel, events) {\n      var currentSub = this._getSub(channel);\n      if (currentSub !== null) {\n        currentSub._setEvents(events);\n        if (currentSub._isUnsubscribed()) {\n          currentSub.subscribe();\n        }\n        return currentSub;\n      }\n      var sub = new _subscription2.default(this, channel, events);\n      this._subs[channel] = sub;\n      sub.subscribe();\n      return sub;\n    }\n  }]);\n\n  return Centrifuge;\n}(_events2.default);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _STATE_NEW = 0;\nvar _STATE_SUBSCRIBING = 1;\nvar _STATE_SUCCESS = 2;\nvar _STATE_ERROR = 3;\nvar _STATE_UNSUBSCRIBED = 4;\n\nvar Subscription = function (_EventEmitter) {\n  _inherits(Subscription, _EventEmitter);\n\n  function Subscription(centrifuge, channel, events) {\n    _classCallCheck(this, Subscription);\n\n    var _this = _possibleConstructorReturn(this, (Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call(this));\n\n    _this.channel = channel;\n    _this._centrifuge = centrifuge;\n    _this._status = _STATE_NEW;\n    _this._error = null;\n    _this._isResubscribe = false;\n    _this._ready = false;\n    _this._subscriptionPromise = null;\n    _this._noResubscribe = false;\n    _this._recoverable = false;\n    _this._recover = false;\n    _this._setEvents(events);\n    _this._initializePromise();\n    _this._promises = {};\n    _this._promiseId = 0;\n    _this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n    return _this;\n  }\n\n  _createClass(Subscription, [{\n    key: '_nextPromiseId',\n    value: function _nextPromiseId() {\n      return ++this._promiseId;\n    }\n  }, {\n    key: '_initializePromise',\n    value: function _initializePromise() {\n      var _this2 = this;\n\n      // this helps us to wait until subscription will successfully\n      // subscribe and call actions such as presence, history etc in\n      // synchronous way.\n      this._ready = false;\n\n      this._subscriptionPromise = new Promise(function (resolve, reject) {\n        _this2._resolve = function (value) {\n          _this2._ready = true;\n          resolve(value);\n        };\n        _this2._reject = function (err) {\n          _this2._ready = true;\n          reject(err);\n        };\n      }).then(function () {}, function () {});\n    }\n  }, {\n    key: '_needRecover',\n    value: function _needRecover() {\n      return this._recoverable === true && this._recover === true;\n    }\n  }, {\n    key: '_setEvents',\n    value: function _setEvents(events) {\n      if (!events) {\n        return;\n      }\n      if ((0, _utils.isFunction)(events)) {\n        // events is just a function to handle publication received from channel.\n        this.on('publish', events);\n      } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n        var knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n        for (var i = 0, l = knownEvents.length; i < l; i++) {\n          var ev = knownEvents[i];\n          if (ev in events) {\n            this.on(ev, events[ev]);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_isNew',\n    value: function _isNew() {\n      return this._status === _STATE_NEW;\n    }\n  }, {\n    key: '_isUnsubscribed',\n    value: function _isUnsubscribed() {\n      return this._status === _STATE_UNSUBSCRIBED;\n    }\n  }, {\n    key: '_isSubscribing',\n    value: function _isSubscribing() {\n      return this._status === _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_isReady',\n    value: function _isReady() {\n      return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_isSuccess',\n    value: function _isSuccess() {\n      return this._status === _STATE_SUCCESS;\n    }\n  }, {\n    key: '_isError',\n    value: function _isError() {\n      return this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_setNew',\n    value: function _setNew() {\n      this._status = _STATE_NEW;\n    }\n  }, {\n    key: '_setSubscribing',\n    value: function _setSubscribing(isResubscribe) {\n      this._isResubscribe = isResubscribe || false;\n      if (this._ready === true) {\n        // new promise for this subscription\n        this._initializePromise();\n      }\n      this._status = _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_setSubscribeSuccess',\n    value: function _setSubscribeSuccess(recovered) {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._status = _STATE_SUCCESS;\n      var successContext = this._getSubscribeSuccessContext(recovered);\n\n      this._recover = false;\n      this.emit('subscribe', successContext);\n      this._resolve(successContext);\n      for (var id in this._promises) {\n        clearTimeout(this._promises[id].timeout);\n        this._promises[id].resolve();\n        delete this._promises[id];\n      }\n    }\n  }, {\n    key: '_setSubscribeError',\n    value: function _setSubscribeError(err) {\n      if (this._status === _STATE_ERROR) {\n        return;\n      }\n      this._status = _STATE_ERROR;\n      this._error = err;\n      var errContext = this._getSubscribeErrorContext();\n      this.emit('error', errContext);\n      this._reject(errContext);\n      for (var id in this._promises) {\n        clearTimeout(this._promises[id].timeout);\n        this._promises[id].reject(err);\n        delete this._promises[id];\n      }\n    }\n  }, {\n    key: '_triggerUnsubscribe',\n    value: function _triggerUnsubscribe() {\n      this.emit('unsubscribe', {\n        channel: this.channel\n      });\n    }\n  }, {\n    key: '_setUnsubscribed',\n    value: function _setUnsubscribed(noResubscribe) {\n      this._centrifuge._clearSubRefreshTimeout(this.channel);\n      if (this._status === _STATE_UNSUBSCRIBED) {\n        return;\n      }\n      var needTrigger = this._status === _STATE_SUCCESS;\n      this._status = _STATE_UNSUBSCRIBED;\n      if (noResubscribe === true) {\n        this._recover = false;\n        this._noResubscribe = true;\n        delete this._centrifuge._lastSeq[this.channel];\n        delete this._centrifuge._lastGen[this.channel];\n        delete this._centrifuge._lastEpoch[this.channel];\n      }\n      if (needTrigger) {\n        this._triggerUnsubscribe();\n      }\n    }\n  }, {\n    key: '_shouldResubscribe',\n    value: function _shouldResubscribe() {\n      return !this._noResubscribe;\n    }\n  }, {\n    key: '_getSubscribeSuccessContext',\n    value: function _getSubscribeSuccessContext(recovered) {\n      return {\n        channel: this.channel,\n        isResubscribe: this._isResubscribe,\n        recovered: recovered\n      };\n    }\n  }, {\n    key: '_getSubscribeErrorContext',\n    value: function _getSubscribeErrorContext() {\n      var subscribeErrorContext = this._error;\n      subscribeErrorContext.channel = this.channel;\n      subscribeErrorContext.isResubscribe = this._isResubscribe;\n      return subscribeErrorContext;\n    }\n  }, {\n    key: 'ready',\n    value: function ready(callback, errback) {\n      if (this._ready) {\n        if (this._isSuccess()) {\n          callback(this._getSubscribeSuccessContext());\n        } else {\n          errback(this._getSubscribeErrorContext());\n        }\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._noResubscribe = false;\n      this._centrifuge._subscribe(this);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this._setUnsubscribed(true);\n      this._centrifuge._unsubscribe(this);\n    }\n  }, {\n    key: '_methodCall',\n    value: function _methodCall(message, type) {\n      var _this3 = this;\n\n      var methodCallPromise = new Promise(function (resolve, reject) {\n        var subPromise = void 0;\n        if (_this3._isSuccess()) {\n          subPromise = Promise.resolve();\n        } else if (_this3._isError()) {\n          subPromise = Promise.reject(_this3._error);\n        } else {\n          subPromise = new Promise(function (res, rej) {\n            var timeout = setTimeout(function () {\n              rej({ 'code': 0, 'message': 'timeout' });\n            }, _this3._centrifuge._config.timeout);\n            _this3._promises[_this3._nextPromiseId()] = {\n              timeout: timeout,\n              resolve: res,\n              reject: rej\n            };\n          });\n        }\n        subPromise.then(function () {\n          return _this3._centrifuge._call(message).then(function (resolveCtx) {\n            resolve(_this3._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n            if (resolveCtx.next) {\n              resolveCtx.next();\n            }\n          }, function (rejectCtx) {\n            reject(rejectCtx.error);\n            if (rejectCtx.next) {\n              rejectCtx.next();\n            }\n          });\n        }, function (error) {\n          reject(error);\n        });\n      });\n      return methodCallPromise;\n    }\n  }, {\n    key: 'publish',\n    value: function publish(data) {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PUBLISH,\n        params: {\n          channel: this.channel,\n          data: data\n        }\n      }, this._centrifuge._methodType.PUBLISH);\n    }\n  }, {\n    key: 'presence',\n    value: function presence() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE);\n    }\n  }, {\n    key: 'presenceStats',\n    value: function presenceStats() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE_STATS,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE_STATS);\n    }\n  }, {\n    key: 'history',\n    value: function history() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.HISTORY,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.HISTORY);\n    }\n  }]);\n\n  return Subscription;\n}(_events2.default);\n\nexports.default = Subscription;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JsonMethodType = exports.JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nvar JsonPushType = exports.JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nvar JsonEncoder = exports.JsonEncoder = function () {\n  function JsonEncoder() {\n    _classCallCheck(this, JsonEncoder);\n  }\n\n  _createClass(JsonEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var encodedCommands = [];\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          encodedCommands.push(JSON.stringify(commands[i]));\n        }\n      }\n      return encodedCommands.join('\\n');\n    }\n  }]);\n\n  return JsonEncoder;\n}();\n\nvar JsonDecoder = exports.JsonDecoder = function () {\n  function JsonDecoder() {\n    _classCallCheck(this, JsonDecoder);\n  }\n\n  _createClass(JsonDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var encodedReplies = data.split('\\n');\n      for (var i in encodedReplies) {\n        if (encodedReplies.hasOwnProperty(i)) {\n          if (!encodedReplies[i]) {\n            continue;\n          }\n          var reply = JSON.parse(encodedReplies[i]);\n          replies.push(reply);\n        }\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      return data;\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return data;\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      return data;\n    }\n  }]);\n\n  return JsonDecoder;\n}();\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Writer;\r\n\r\nvar util      = __webpack_require__(1);\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Reader;\r\n\r\nvar util      = __webpack_require__(1);\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = __webpack_require__(5),\r\n    util  = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Message;\r\n\r\nvar util = __webpack_require__(1);\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = __webpack_require__(45);\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = __webpack_require__(2),\r\n    types    = __webpack_require__(9),\r\n    util     = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = __webpack_require__(2),\r\n    OneOf     = __webpack_require__(15),\r\n    Field     = __webpack_require__(5),\r\n    MapField  = __webpack_require__(23),\r\n    Service   = __webpack_require__(24),\r\n    Message   = __webpack_require__(16),\r\n    Reader    = __webpack_require__(14),\r\n    Writer    = __webpack_require__(13),\r\n    util      = __webpack_require__(0),\r\n    encoder   = __webpack_require__(21),\r\n    decoder   = __webpack_require__(26),\r\n    verifier  = __webpack_require__(27),\r\n    converter = __webpack_require__(28),\r\n    wrappers  = __webpack_require__(29);\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = __webpack_require__(5);\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = __webpack_require__(9),\r\n    util    = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = __webpack_require__(25),\r\n    util   = __webpack_require__(0),\r\n    rpc    = __webpack_require__(19);\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = __webpack_require__(2),\r\n    types   = __webpack_require__(9),\r\n    util    = __webpack_require__(0);\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = __webpack_require__(2),\r\n    util      = __webpack_require__(0);\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = __webpack_require__(2),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = __webpack_require__(16);\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = __webpack_require__(5),\r\n    Enum    = __webpack_require__(2),\r\n    OneOf   = __webpack_require__(15),\r\n    util    = __webpack_require__(0);\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n\n\n/***/ }),\n/* 31 */,\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _protobuf = __webpack_require__(33);\n\nexports.default = _protobuf.CentrifugeProtobuf;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CentrifugeProtobuf = exports.ProtobufDecoder = exports.ProtobufEncoder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _centrifuge = __webpack_require__(10);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar protobuf = __webpack_require__(34);\nvar proto = protobuf.Root.fromJSON(__webpack_require__(49));\n\nvar methodValues = proto.lookupEnum('MethodType').values;\n\nvar protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nvar methodSchema = {\n  CONNECT: [proto.lookupType('proto.ConnectRequest'), proto.lookupType('proto.ConnectResult')],\n  REFRESH: [proto.lookupType('proto.RefreshRequest'), proto.lookupType('proto.RefreshResult')],\n  SUBSCRIBE: [proto.lookupType('proto.SubscribeRequest'), proto.lookupType('proto.SubscribeResult')],\n  SUB_REFRESH: [proto.lookupType('proto.SubRefreshRequest'), proto.lookupType('proto.SubRefreshResult')],\n  UNSUBSCRIBE: [proto.lookupType('proto.UnsubscribeRequest'), proto.lookupType('proto.UnsubscribeResult')],\n  PUBLISH: [proto.lookupType('proto.PublishRequest'), proto.lookupType('proto.PublishResult')],\n  PRESENCE: [proto.lookupType('proto.PresenceRequest'), proto.lookupType('proto.PresenceResult')],\n  PRESENCE_STATS: [proto.lookupType('proto.PresenceStatsRequest'), proto.lookupType('proto.PresenceStatsResult')],\n  HISTORY: [proto.lookupType('proto.HistoryRequest'), proto.lookupType('proto.HistoryResult')],\n  PING: [proto.lookupType('proto.PingRequest'), proto.lookupType('proto.PingResult')],\n  RPC: [proto.lookupType('proto.RPCRequest'), proto.lookupType('proto.RPCResult')],\n  SEND: [proto.lookupType('proto.SendRequest'), null]\n};\n\nvar protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nvar PushSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub'),\n  MESSAGE: proto.lookupType('proto.Message')\n};\n\nvar Push = proto.lookupType('proto.Push');\nvar Command = proto.lookupType('proto.Command');\nvar Reply = proto.lookupType('proto.Reply');\n\nvar ProtobufEncoder = exports.ProtobufEncoder = function () {\n  function ProtobufEncoder() {\n    _classCallCheck(this, ProtobufEncoder);\n  }\n\n  _createClass(ProtobufEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var writer = protobuf.Writer.create();\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          var command = Object.assign({}, commands[i]);\n          if (command.params) {\n            var type = void 0;\n            if (!command.method) {\n              command.method = protobufMethodType.CONNECT;\n            };\n            switch (command.method) {\n              case protobufMethodType.CONNECT:\n                type = methodSchema.CONNECT[0];\n                break;\n              case protobufMethodType.REFRESH:\n                type = methodSchema.REFRESH;\n                break;\n              case protobufMethodType.SUBSCRIBE:\n                type = methodSchema.SUBSCRIBE[0];\n                break;\n              case protobufMethodType.SUB_REFRESH:\n                type = methodSchema.SUB_REFRESH[0];\n                break;\n              case protobufMethodType.UNSUBSCRIBE:\n                type = methodSchema.UNSUBSCRIBE[0];\n                break;\n              case protobufMethodType.PUBLISH:\n                type = methodSchema.PUBLISH[0];\n                break;\n              case protobufMethodType.PRESENCE:\n                type = methodSchema.PRESENCE[0];\n                break;\n              case protobufMethodType.PRESENCE_STATS:\n                type = methodSchema.PRESENCE_STATS[0];\n                break;\n              case protobufMethodType.HISTORY:\n                type = methodSchema.HISTORY[0];\n                break;\n              case protobufMethodType.PING:\n                type = methodSchema.PING[0];\n                break;\n              case protobufMethodType.RPC:\n                type = methodSchema.RPC[0];\n                break;\n              case protobufMethodType.SEND:\n                type = methodSchema.SEND[0];\n                break;\n            }\n            command.params = type.encode(command.params).finish();\n          }\n          Command.encodeDelimited(command, writer);\n        }\n      }\n      return writer.finish();\n    }\n  }]);\n\n  return ProtobufEncoder;\n}();\n\nvar ProtobufDecoder = exports.ProtobufDecoder = function () {\n  function ProtobufDecoder() {\n    _classCallCheck(this, ProtobufDecoder);\n  }\n\n  _createClass(ProtobufDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var reader = protobuf.Reader.create(new Uint8Array(data));\n      while (reader.pos < reader.len) {\n        var reply = Reply.decodeDelimited(reader);\n        replies.push(reply);\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      var type;\n      switch (methodType) {\n        case protobufMethodType.CONNECT:\n          type = methodSchema.CONNECT[1];\n          break;\n        case protobufMethodType.REFRESH:\n          type = methodSchema.REFRESH[1];\n          break;\n        case protobufMethodType.SUBSCRIBE:\n          type = methodSchema.SUBSCRIBE[1];\n          break;\n        case protobufMethodType.SUB_REFRESH:\n          type = methodSchema.SUB_REFRESH[1];\n          break;\n        case protobufMethodType.UNSUBSCRIBE:\n          type = methodSchema.UNSUBSCRIBE[1];\n          break;\n        case protobufMethodType.PUBLISH:\n          type = methodSchema.PUBLISH[1];\n          break;\n        case protobufMethodType.PRESENCE:\n          type = methodSchema.PRESENCE[1];\n          break;\n        case protobufMethodType.PRESENCE_STATS:\n          type = methodSchema.PRESENCE_STATS[1];\n          break;\n        case protobufMethodType.HISTORY:\n          type = methodSchema.HISTORY[1];\n          break;\n        case protobufMethodType.PING:\n          type = methodSchema.PING[1];\n          break;\n        case protobufMethodType.RPC:\n          type = methodSchema.RPC[1];\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return this._decode(Push, data);\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      var type;\n      switch (pushType) {\n        case protobufPushType.PUBLICATION:\n          type = PushSchema.PUBLICATION;\n          break;\n        case protobufPushType.MESSAGE:\n          type = PushSchema.MESSAGE;\n          break;\n        case protobufPushType.JOIN:\n          type = PushSchema.JOIN;\n          break;\n        case protobufPushType.LEAVE:\n          type = PushSchema.LEAVE;\n          break;\n        case protobufPushType.UNSUB:\n          type = PushSchema.UNSUB;\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: '_decode',\n    value: function _decode(type, data) {\n      var res = void 0;\n      try {\n        res = type.decode(data);\n      } catch (err) {\n        return null;\n      }\n      return res;\n    }\n  }]);\n\n  return ProtobufDecoder;\n}();\n\nvar CentrifugeProtobuf = exports.CentrifugeProtobuf = function (_Centrifuge) {\n  _inherits(CentrifugeProtobuf, _Centrifuge);\n\n  function CentrifugeProtobuf() {\n    _classCallCheck(this, CentrifugeProtobuf);\n\n    return _possibleConstructorReturn(this, (CentrifugeProtobuf.__proto__ || Object.getPrototypeOf(CentrifugeProtobuf)).apply(this, arguments));\n  }\n\n  _createClass(CentrifugeProtobuf, [{\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      if (format === 'protobuf') {\n        this._binary = true;\n        this._methodType = protobufMethodType;\n        this._pushType = protobufPushType;\n        this._encoder = new ProtobufEncoder();\n        this._decoder = new ProtobufDecoder();\n        return true;\n      }\n      return false;\n    }\n  }]);\n\n  return CentrifugeProtobuf;\n}(_centrifuge.Centrifuge);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// light library entry point.\r\n\r\n\r\nmodule.exports = __webpack_require__(35);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = module.exports = __webpack_require__(36);\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = __webpack_require__(21);\r\nprotobuf.decoder          = __webpack_require__(26);\r\nprotobuf.verifier         = __webpack_require__(27);\r\nprotobuf.converter        = __webpack_require__(28);\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = __webpack_require__(4);\r\nprotobuf.Namespace        = __webpack_require__(8);\r\nprotobuf.Root             = __webpack_require__(30);\r\nprotobuf.Enum             = __webpack_require__(2);\r\nprotobuf.Type             = __webpack_require__(22);\r\nprotobuf.Field            = __webpack_require__(5);\r\nprotobuf.OneOf            = __webpack_require__(15);\r\nprotobuf.MapField         = __webpack_require__(23);\r\nprotobuf.Service          = __webpack_require__(24);\r\nprotobuf.Method           = __webpack_require__(25);\r\n\r\n// Runtime\r\nprotobuf.Message          = __webpack_require__(16);\r\nprotobuf.wrappers         = __webpack_require__(29);\r\n\r\n// Utility\r\nprotobuf.types            = __webpack_require__(9);\r\nprotobuf.util             = __webpack_require__(0);\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = __webpack_require__(13);\r\nprotobuf.BufferWriter = __webpack_require__(43);\r\nprotobuf.Reader       = __webpack_require__(14);\r\nprotobuf.BufferReader = __webpack_require__(44);\r\n\r\n// Utility\r\nprotobuf.util         = __webpack_require__(1);\r\nprotobuf.rpc          = __webpack_require__(19);\r\nprotobuf.roots        = __webpack_require__(20);\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = LongBits;\r\n\r\nvar util = __webpack_require__(1);\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = __webpack_require__(13);\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = __webpack_require__(1);\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = __webpack_require__(14);\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = __webpack_require__(1);\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\nvar util = __webpack_require__(1);\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(17),\r\n    inquire   = __webpack_require__(18);\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"conn_info\":{\"type\":\"bytes\",\"id\":3},\"chan_info\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"num_clients\":{\"type\":\"uint32\",\"id\":1},\"num_users\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// centrifuge.protobuf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 858363e1fedb4bd6127e","\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/minimal.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/enum.js\n// module id = 2\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/object.js\n// module id = 4\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/field.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = require(\"./field\"),\r\n    util     = require(\"./util\");\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/namespace.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/types.js\n// module id = 9\n// module chunks = 0","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._config = {\n      debug: false,\n      websocket: null,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    const msg = {\n      method: this._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(resolveCtx => {\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n      return this._decoder.decodeCommandResult(this._methodType.RPC, resolveCtx.result);\n    }, rejectCtx => {\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n      return rejectCtx.error;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    return this._call(msg).then(result => {\n      if (result.next) {\n        result.next();\n      }\n      return {};\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    this._restartPing();\n  }\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        if (seq) {\n          msg.params.seq = seq;\n        }\n        const gen = this._getLastGen(channel);\n        if (gen) {\n          msg.params.gen = gen;\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _connectResponse(result) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      pubs = pubs.reverse();\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', {'info': join.info});\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', {'info': leave.info});\n  };\n\n  _handleUnsub(channel, unsub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    sub.emit('publish', pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    }\n    next();\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              if (seq) {\n                msg.params.seq = seq;\n              }\n              const gen = this._getLastGen(channel);\n              if (gen) {\n                msg.params.gen = gen;\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(recovered) {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[this._nextPromiseId()] = {\n            timeout: timeout,\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            resolveCtx => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, resolveCtx.result));\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            },\n            rejectCtx => {\n              reject(rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader.js\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/oneof.js\n// module id = 15\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/message.js\n// module id = 16\n// module chunks = 0","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/aspromise/index.js\n// module id = 17\n// module chunks = 0","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/inquire/index.js\n// module id = 18\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc.js\n// module id = 19\n// module chunks = 0","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/roots.js\n// module id = 20\n// module chunks = 0","\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/encoder.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/type.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/mapfield.js\n// module id = 23\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/service.js\n// module id = 24\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/method.js\n// module id = 25\n// module chunks = 0","\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/decoder.js\n// module id = 26\n// module chunks = 0","\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/verifier.js\n// module id = 27\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/converter.js\n// module id = 28\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/wrappers.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/root.js\n// module id = 30\n// module chunks = 0","import {CentrifugeProtobuf} from './protobuf.js';\nexport default CentrifugeProtobuf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index_protobuf.js","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nconst protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('proto.ConnectRequest'),\n    proto.lookupType('proto.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('proto.RefreshRequest'),\n    proto.lookupType('proto.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('proto.SubscribeRequest'),\n    proto.lookupType('proto.SubscribeResult')\n  ],\n  SUB_REFRESH: [\n    proto.lookupType('proto.SubRefreshRequest'),\n    proto.lookupType('proto.SubRefreshResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('proto.UnsubscribeRequest'),\n    proto.lookupType('proto.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('proto.PublishRequest'),\n    proto.lookupType('proto.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('proto.PresenceRequest'),\n    proto.lookupType('proto.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('proto.PresenceStatsRequest'),\n    proto.lookupType('proto.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('proto.HistoryRequest'),\n    proto.lookupType('proto.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('proto.PingRequest'),\n    proto.lookupType('proto.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('proto.RPCRequest'),\n    proto.lookupType('proto.RPCResult')\n  ],\n  SEND: [\n    proto.lookupType('proto.SendRequest'),\n    null\n  ]\n};\n\nconst protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nconst PushSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub'),\n  MESSAGE: proto.lookupType('proto.Message')\n};\n\nconst Push = proto.lookupType('proto.Push');\nconst Command = proto.lookupType('proto.Command');\nconst Reply = proto.lookupType('proto.Reply');\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          if (!command.method) {\n            command.method = protobufMethodType.CONNECT;\n          };\n          switch (command.method) {\n            case protobufMethodType.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case protobufMethodType.REFRESH:\n              type = methodSchema.REFRESH;\n              break;\n            case protobufMethodType.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case protobufMethodType.SUB_REFRESH:\n              type = methodSchema.SUB_REFRESH[0];\n              break;\n            case protobufMethodType.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case protobufMethodType.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case protobufMethodType.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case protobufMethodType.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case protobufMethodType.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case protobufMethodType.PING:\n              type = methodSchema.PING[0];\n              break;\n            case protobufMethodType.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case protobufMethodType.SEND:\n              type = methodSchema.SEND[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case protobufMethodType.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case protobufMethodType.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case protobufMethodType.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case protobufMethodType.SUB_REFRESH:\n        type = methodSchema.SUB_REFRESH[1];\n        break;\n      case protobufMethodType.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case protobufMethodType.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case protobufMethodType.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case protobufMethodType.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case protobufMethodType.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case protobufMethodType.PING:\n        type = methodSchema.PING[1];\n        break;\n      case protobufMethodType.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodePush(data) {\n    return this._decode(Push, data);\n  }\n\n  decodePushData(pushType, data) {\n    var type;\n    switch (pushType) {\n      case protobufPushType.PUBLICATION:\n        type = PushSchema.PUBLICATION;\n        break;\n      case protobufPushType.MESSAGE:\n        type = PushSchema.MESSAGE;\n        break;\n      case protobufPushType.JOIN:\n        type = PushSchema.JOIN;\n        break;\n      case protobufPushType.LEAVE:\n        type = PushSchema.LEAVE;\n        break;\n      case protobufPushType.UNSUB:\n        type = PushSchema.UNSUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = protobufMethodType;\n      this._pushType = protobufPushType;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/protobuf.js","// light library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-light\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/light.js\n// module id = 34\n// module chunks = 0","\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-light.js\n// module id = 35\n// module chunks = 0","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-minimal.js\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/base64/index.js\n// module id = 37\n// module chunks = 0","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/eventemitter/index.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/float/index.js\n// module id = 39\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/utf8/index.js\n// module id = 40\n// module chunks = 0","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/pool/index.js\n// module id = 41\n// module chunks = 0","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/longbits.js\n// module id = 42\n// module chunks = 0","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer_buffer.js\n// module id = 43\n// module chunks = 0","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader_buffer.js\n// module id = 44\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc/service.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/codegen/index.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/fetch/index.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/path/index.js\n// module id = 48\n// module chunks = 0","module.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"conn_info\":{\"type\":\"bytes\",\"id\":3},\"chan_info\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"num_clients\":{\"type\":\"uint32\",\"id\":1},\"num_users\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.proto.json\n// module id = 49\n// module chunks = 0"],"sourceRoot":""}